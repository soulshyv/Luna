// <auto-generated />
using System;
using Luna.Commons.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Luna.Commons.Migrations
{
    [DbContext(typeof(LunaDbContext))]
    partial class LunaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Luna.Commons.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<byte[]>("Description")
                        .HasColumnName("description")
                        .HasColumnType("blob");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("nom")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("RaceId")
                        .HasColumnName("race_id")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnName("type_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RaceId");

                    b.HasIndex("TypeId");

                    b.ToTable("luna_rpg_character");
                });

            modelBuilder.Entity("Luna.Commons.Models.CharacterType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<byte[]>("Description")
                        .HasColumnName("description")
                        .HasColumnType("blob");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("nom")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("luna_rpg_character_type");
                });

            modelBuilder.Entity("Luna.Commons.Models.CustomProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnName("character_id")
                        .HasColumnType("int");

                    b.Property<byte[]>("Description")
                        .HasColumnName("description")
                        .HasColumnType("blob");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("nom")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("RaceId")
                        .HasColumnName("race_id")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnName("type_id")
                        .HasColumnType("int");

                    b.Property<string>("Unite")
                        .HasColumnName("unite")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Valeur")
                        .HasColumnName("valeur")
                        .HasColumnType("int");

                    b.Property<int?>("ValeurMax")
                        .HasColumnName("valeur_max")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("RaceId");

                    b.HasIndex("TypeId");

                    b.ToTable("luna_rpg_custom_entity");
                });

            modelBuilder.Entity("Luna.Commons.Models.CustomPropertyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<byte[]>("Description")
                        .HasColumnName("description")
                        .HasColumnType("blob");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("nom")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("luna_rpg_custom_property_type");
                });

            modelBuilder.Entity("Luna.Commons.Models.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<byte[]>("Description")
                        .HasColumnName("description")
                        .HasColumnType("blob");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("nom")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("luna_rpg_race");
                });

            modelBuilder.Entity("Luna.Commons.Models.Character", b =>
                {
                    b.HasOne("Luna.Commons.Models.Race", "Race")
                        .WithMany("Characters")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luna.Commons.Models.CharacterType", "Type")
                        .WithMany("Characters")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Luna.Commons.Models.CustomProperty", b =>
                {
                    b.HasOne("Luna.Commons.Models.Character", "Character")
                        .WithMany("CustomProperties")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luna.Commons.Models.Race", "Race")
                        .WithMany("CustomProperties")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Luna.Commons.Models.CustomPropertyType", "Type")
                        .WithMany("CustomProperties")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
